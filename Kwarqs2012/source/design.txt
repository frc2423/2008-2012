
General Design Interface for each class:

    Setter functions:
        These must be called every time around the main control loop,
        otherwise the default action for the class will be taken. Which
        should mean it turns motors off, etc. 

    IsSet():
        -> only low level classes support this!
    
        returns True if an operator manually set the thing already. This is
        so that automated processes don't step on what the user wants to do
        unless they have to do it.

    Update():
        Sets motor values and makes complex decisions
        After done, resets the various setter variables to nothing,
        so that the default action is taken if the user doesn't do
        anything.
        

Class Hiearchy: 


    robot
        OperatorControl()
    
    operator_leds
    util

    autonomous:
        
        -> setup shiny autonomous framework, easy integration
        with SmartDashboard chooser
        
        FeedTeammates
        AutoShoot
        Nothing
        
        
    components:
    
        RobotManager:
        
            FireWhenReady()
            TrackTarget()
    
        
        RampArm:
            Extend()
            
        BallHandler:
            -> Owns feeder, chamber
        
            IsReadyToShoot()
                -> Chamber.IsFull()
        
            CollectBalls()
            FeedShooter()
                -> needs to continue until ball was shot, can't stop
        
            NumberOfBalls()
                -- use sensors and tracking to detect number of balls
                   currently in the robot
        
            Feeder:
                Feed()
                Stop()
                Expel()
                IsFull()
                IsEmpty()
                HasTopBall()
            
            Chamber:
                IsFull()
                Run()
                Remove()
                Stop()
                
        
        Shooter:
        
            Camera:
                IsReady()
                
                PointCameraDown()
                -> this part does the network tables bit
        
            Susan:
                IsReady()
                    - always returns true in manual mode
                SetAngle() -- this is only valid relative to the robot
                Turn( ) -- this is manual, left/right or none?
            
                - Need gyro based and non-gyro based automated solutions
            
            Wheel:
                
                IsReady()
                SetSpeed()
                Enable()
                Disable()

                -> detect ball being shot by sudden decrease in speed
