import wpilibclass Kicker:    # define the kicker states here    STATE_IDLE = 1    STATE_START_KICK = 2    STATE_RELEASE = 3    STATE_RESET = 4        # define the roller states here    ROLLER_STATE_ON = 1    ROLLER_STATE_OFF = 2    ROLLER_STATE_ACTION = 3    def __init__(self):            self.compressor = wpilib.Compressor( 6, 1 )                self.engage = wpilib.Solenoid( 1 )        self.release = wpilib.Solenoid( 2 )                self.roller = wpilib.Jaguar( 3 )        self.ball_input = wpilib.DigitalInput( 10 )            def kick(self):        ''' Sets a kick in motion '''                if self.state == STATE_IDLE:            self.state = STATE_START_KICK            self.set_roller( ROLLER_STATE_ACTION )            self.time.Reset()            def is_kicking(self):        ''' returns true if currently kicking '''        return self.state != STATE_IDLE            def set_roller(self, roller_state):            roller_enabled =                 if not roller_enabled:            self.roller.Set( 0 )            return                    if roller_state == ROLLER_STATE_ON:            self.roller.Set( -1.0 )        elif roller_state == ROLLER_STATE_OFF:            self.roller.Set( 0.0 )        elif roller_state == ROLLER_STATE_ACTION:            self.roller.Set( self.roller_action_speed )        #else            #raise Exception("Invalid argument")                              def execute(self):        '''        This gets called in the main loop and executes the kicker's         state machine        '''                #driver_station.SetDigitalOut( m_has_ball )                        if self.state == STATE_IDLE:                    # this is the normal running state            self.set_roller( ROLLER_STATE_ON )            self.engage.Set( False )            self.release.Set( False )                    elif self.state == STATE_START_KICK:                    # this state engages the pnuematics to perform the kick            # appropriately after a short delay                        if self.time.Get() > :                            self.engage.Set( True )                self.release.Set( False )                                self.time.Reset()                self.state = STATE_RELEASE                elif self.state == STATE_RELEASE:                    # this state waits for the pneumatics to fully release            # before bringing them back                    if self.time.Get() > KICK_TIME:                                            self.set_roller( ROLLER_STATE_ON )                self.engage.Set( False )                self.release.Set( True )                self.time.Reset()                                self.state = STATE_RESET                elif self.state == STATE_RESET:        			# this state waits for the pneumatics to come back to their			# starting position and then we fall back to idle mode                        if self.time.Get() >= KICK_TIME:                self.state = STATE_IDLE                    else:            # what do we do here? shouldn't get here...            raise Exception("Internal error in kicker state machine")                